using System.Text;
using System.Text.Json;
using System.Security.Cryptography;

var url = "https://sandbox.ipaymu.com/api/v2/payment-method-list"; //sandbox url (for development mode)
// var url = "https://my.ipaymu.com/api/v2/payment-method-list"; //production url
var va = "1179000899"; // your iPaymu VA
var apiKey = "QbGcoO0Qds9sQFDmY0MWg1Tq.xtuh1"; // your iPaymu API Key


var json = JsonSerializer.Serialize("");
var RequestBody = ComputeSha256Hash(json);
var stringToSign = "GET:" + va + ":" + RequestBody + ":" + apiKey;

String signature = calcHmac(stringToSign, apiKey);


using var client = new HttpClient();

client.DefaultRequestHeaders.Add("Accept", "application/json");
client.DefaultRequestHeaders.Add("VA", va);
client.DefaultRequestHeaders.Add("signature", signature);

var response = await client.GetAsync(url);

string result = response.Content.ReadAsStringAsync().Result;
Console.WriteLine(result);


static string ComputeSha256Hash(string rawData)  
{  
    // Create a SHA256   
    using (SHA256 sha256Hash = SHA256.Create())  
    {  
        // ComputeHash - returns byte array  
        byte[] bytes = sha256Hash.ComputeHash(Encoding.UTF8.GetBytes(rawData));  

        // Convert byte array to a string   
        StringBuilder builder = new StringBuilder();  
        for (int i = 0; i < bytes.Length; i++)  
        {  
            builder.Append(bytes[i].ToString("x2"));  
        }  
        return builder.ToString();  
    }  
}  

static string calcHmac(string data, string apiKey)
{
    byte[] key = Encoding.ASCII.GetBytes(apiKey);
    HMACSHA256 myhmacsha256 = new HMACSHA256(key);
    byte[] byteArray = Encoding.ASCII.GetBytes(data);
    MemoryStream stream = new MemoryStream(byteArray);
    string result = myhmacsha256.ComputeHash(stream).Aggregate("", (s, e) => s + String.Format("{0:x2}",e), s => s );
    return result;
}